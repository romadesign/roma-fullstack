(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{388:function(a,e,s){"use strict";s.r(e);var t=s(45),i=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"_2-configuracion-basica"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-configuracion-basica"}},[a._v("#")]),a._v(" 2.- Configuración Básica")]),a._v(" "),s("h2",{attrs:{id:"configurar-nombre-que-salen-en-los-commits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configurar-nombre-que-salen-en-los-commits"}},[a._v("#")]),a._v(" Configurar Nombre que salen en los commits")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git config --global user.name "dasdo"\n')])])]),s("p",[a._v("Configurar Email")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git config --global user.email dasdo1@gmail.com\n")])])]),s("p",[a._v("Marco de colores para los comando")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git config --global color.ui true\n")])])]),s("p",[a._v("Iniciando repositorio\nIniciamos GIT en la carpeta donde esta el proyecto")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git init\n")])])]),s("p",[a._v("Clonamos el repositorio de github o bitbucket")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git clone <url>\n")])])]),s("p",[a._v("Añadimos todos los archivos para el commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add .\n")])])]),s("p",[a._v("Hacemos el primer commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git commit -m "Texto que identifique por que se hizo el commit"\n')])])]),s("p",[a._v("Subimos al repositorio")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git push origin master\n")])])]),s("h1",{attrs:{id:"git-clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[a._v("#")]),a._v(" GIT CLONE")]),a._v(" "),s("p",[a._v("Clonamos el repositorio de github o bitbucket")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git clone <url>\n")])])]),s("p",[a._v("#Clonamos el repositorio de github o bitbucket ?????")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git clone <url> git-demo\n")])])]),s("h2",{attrs:{id:"git-add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[a._v("#")]),a._v(" GIT ADD")]),a._v(" "),s("p",[a._v("Añadimos todos los archivos para el commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add .\n")])])]),s("p",[a._v("Añadimos el archivo para el commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add <archivo>\n")])])]),s("p",[a._v("Añadimos todos los archivos para el commit omitiendo los nuevos")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add --all \n")])])]),s("p",[a._v("Añadimos todos los archivos con la extensión especificada")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add *.txt\n")])])]),s("p",[a._v("Añadimos todos los archivos dentro de un directorio y de una extensión especifica")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add docs/*.txt\n")])])]),s("p",[a._v("Añadimos todos los archivos dentro de un directorios")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git add docs/\n")])])]),s("h2",{attrs:{id:"git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[a._v("#")]),a._v(" GIT COMMIT")]),a._v(" "),s("p",[a._v("Cargar en el HEAD los cambios realizados")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git commit -m "Texto que identifique por que se hizo el commit"\n')])])]),s("p",[a._v("Agregar y Cargar en el HEAD los cambios realizados")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git commit -a -m "Texto que identifique por que se hizo el commit"\n')])])]),s("p",[a._v("De haber conflictos los muestra")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git commit -a \n")])])]),s("p",[a._v("Agregar al ultimo commit, este no se muestra como un nuevo commit en los logs. Se puede especificar un nuevo mensaje")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git commit --amend -m "Texto que identifique por que se hizo el commit"\n')])])]),s("h2",{attrs:{id:"git-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[a._v("#")]),a._v(" GIT PUSH")]),a._v(" "),s("p",[a._v("Subimos al repositorio")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git push <origien> <branch>\n")])])]),s("p",[a._v("Subimos un tag")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git push --tags\n")])])]),s("h2",{attrs:{id:"git-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[a._v("#")]),a._v(" GIT LOG")]),a._v(" "),s("p",[a._v("Muestra los logs de los commits")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git log\n")])])]),s("p",[a._v("Muestras los cambios en los commits")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git log --oneline --stat\n")])])]),s("p",[a._v("Muestra graficos de los commits")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git log --oneline --graph\n")])])]),s("h2",{attrs:{id:"git-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[a._v("#")]),a._v(" GIT DIFF")]),a._v(" "),s("p",[a._v("Muestra los cambios realizados a un archivo")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git diff\ngit diff --staged\n")])])]),s("p",[a._v("GIT HEAD\nSaca un archivo del commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset HEAD <archivo>\n")])])]),s("p",[a._v("Devuelve el ultimo commit que se hizo y pone los cambios en staging")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --soft HEAD^\n")])])]),s("p",[a._v("Devuelve el ultimo commit y todos los cambios")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD^\n")])])]),s("p",[a._v("Devuelve los 2 ultimo commit y todos los cambios")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reset --hard HEAD^^\n")])])]),s("p",[a._v("Rollback merge/commit")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git log\ngit reset --hard <commit_sha>\n")])])]),s("p",[a._v("GIT REMOTE\nAgregar repositorio remoto")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote add origin <url>\n")])])]),s("p",[a._v("Cambiar de remote")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote set-url origin <url>\n")])])]),s("p",[a._v("Remover repositorio")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote rm <name/origin>\n")])])]),s("p",[a._v("Muestra lista repositorios")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote -v\n")])])]),s("p",[a._v("Muestra los branches remotos")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote show origin\n")])])]),s("p",[a._v("Limpiar todos los branches eliminados")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote prune origin \n")])])]),s("h2",{attrs:{id:"git-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[a._v("#")]),a._v(" GIT BRANCH")]),a._v(" "),s("p",[a._v("Crea un branch")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git branch <nameBranch>\n")])])]),s("p",[a._v("Lista los branches")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git branch\n")])])]),s("p",[a._v("Comando -d elimina el branch y lo une al master")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git branch -d <nameBranch>\n")])])]),s("p",[a._v("Elimina sin preguntar")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git branch -D <nameBranch>\nGIT TAG\nMuestra una lista de todos los tags\n\ngit tag\n")])])]),s("p",[a._v("Crea un nuevo tags")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('git tag -a <verison> - m "esta es la versión x"\n')])])]),s("h2",{attrs:{id:"git-rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[a._v("#")]),a._v(" GIT REBASE")]),a._v(" "),s("p",[a._v("Los rebase se usan cuando trabajamos con branches esto hace que los branches se pongan al día con el master sin afectar al mismo")]),a._v(" "),s("p",[a._v("Une el branch actual con el mastar, esto no se puede ver como un merge")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git rebase\n")])])]),s("p",[a._v("Cuando se produce un conflicto no das las siguientes opciones:")]),a._v(" "),s("p",[a._v("cuando resolvemos los conflictos --continue continua la secuencia del rebase donde se pauso")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git rebase --continue \n")])])]),s("p",[a._v("Omite el conflicto y sigue su camino")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git rebase --skip\n")])])]),s("p",[a._v("Devuelve todo al principio del rebase")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git reabse --abort\n")])])]),s("p",[a._v("Para hacer un rebase a un branch en especifico")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git rebase <nameBranch>\n")])])]),s("h2",{attrs:{id:"otros-comandos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#otros-comandos"}},[a._v("#")]),a._v(" OTROS COMANDOS")]),a._v(" "),s("p",[a._v("Lista un estado actual del repositorio con lista de archivos modificados o agregados")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git status\n")])])]),s("p",[a._v("Quita del HEAD un archivo y le pone el estado de no trabajado")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git checkout -- <file>\n")])])]),s("p",[a._v("Crea un branch en base a uno online")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git checkout -b newlocalbranchname origin/branch-name\n")])])]),s("p",[a._v("Busca los cambios nuevos y actualiza el repositorio")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git pull origin <nameBranch>\n")])])]),s("p",[a._v("Cambiar de branch")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git checkout <nameBranch/tagname>\n")])])]),s("p",[a._v("Une el branch actual con el especificado")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git merge <nameBranch>\n")])])]),s("p",[a._v("Verifica cambios en el repositorio online con el local")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git fetch\n")])])]),s("p",[a._v("Borrar un archivo del repositorio")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git rm <archivo> \n")])])]),s("p",[a._v("Fork\nDescargar remote de un fork")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git remote add upstream <url>\n")])])]),s("p",[a._v("Merge con master de un fork")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("git fetch upstream\ngit merge upstream/master")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);